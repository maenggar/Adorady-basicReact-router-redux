{"ast":null,"code":"import _objectSpread from \"/home/maenggar/WebStorm Project/adroady/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initState = {\n  post: [{\n    id: '1',\n    title: 'task redux',\n    data: 'ini data redux1'\n  }, {\n    id: '1',\n    title: 'task redux',\n    data: 'ini data redux1'\n  }, {\n    id: '1',\n    title: 'task redux',\n    data: 'ini data redux1'\n  }]\n};\n\nconst myReducer = (state = initState, action) => {\n  if (action.type === 'ADD_POST') {\n    return _objectSpread({}, state, {\n      post: [...state.post, action.post]\n    });\n  }\n}; // store.subscribe(() => {\n//         console.log('state updated');\n//         console.log(store.getState())\n//     }\n// );\n//\n//  store.dispatch({type: 'ADD_TODO', todo: 'learn redux'});\n// store.dispatch({type: 'ADD_POST', todo: 'sending redux task'});\n\n\nexport default myReducer;","map":{"version":3,"sources":["/home/maenggar/WebStorm Project/adroady/src/reducers/MyReducer.js"],"names":["initState","post","id","title","data","myReducer","state","action","type"],"mappings":";AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,CACF;AAACC,IAAAA,EAAE,EAAC,GAAJ;AAAQC,IAAAA,KAAK,EAAC,YAAd;AAA2BC,IAAAA,IAAI,EAAC;AAAhC,GADE,EAEF;AAACF,IAAAA,EAAE,EAAC,GAAJ;AAAQC,IAAAA,KAAK,EAAC,YAAd;AAA2BC,IAAAA,IAAI,EAAC;AAAhC,GAFE,EAGF;AAACF,IAAAA,EAAE,EAAC,GAAJ;AAAQC,IAAAA,KAAK,EAAC,YAAd;AAA2BC,IAAAA,IAAI,EAAC;AAAhC,GAHE;AADQ,CAAlB;;AAQA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGN,SAAT,EAAoBO,MAApB,KAA+B;AAE7C,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,6BACOF,KADP;AAEIL,MAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBM,MAAM,CAACN,IAAvB;AAFV;AAIH;AACJ,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,eAAeI,SAAf","sourcesContent":["const initState = {\n    post: [\n        {id:'1',title:'task redux',data:'ini data redux1'},\n        {id:'1',title:'task redux',data:'ini data redux1'},\n        {id:'1',title:'task redux',data:'ini data redux1'}\n    ]\n};\n\nconst myReducer = (state = initState, action) => {\n\n    if (action.type === 'ADD_POST') {\n        return {\n            ...state,\n            post: [...state.post, action.post]\n        }\n    }\n};\n\n// store.subscribe(() => {\n//         console.log('state updated');\n//         console.log(store.getState())\n//     }\n// );\n//\n\n//  store.dispatch({type: 'ADD_TODO', todo: 'learn redux'});\n// store.dispatch({type: 'ADD_POST', todo: 'sending redux task'});\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}