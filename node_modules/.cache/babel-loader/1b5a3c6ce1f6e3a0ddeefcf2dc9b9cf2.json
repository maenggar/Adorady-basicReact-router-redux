{"ast":null,"code":"import _objectSpread from \"/home/maenggar/WebStorm Project/adroady/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore } from 'redux';\nconst initState = {\n  todo: [],\n  post: []\n};\n\nfunction rootReducer(state = initState, action) {\n  if (action.type == 'ADD_TODO') {\n    return _objectSpread({}, state, {\n      todo: [...state.todo, action.todo]\n    });\n  }\n\n  if (action.type == 'ADD_POST') {\n    return _objectSpread({}, state, {\n      post: [...state.post, action.post]\n    });\n  }\n}\n\nconst store = createStore(rootReducer);\nstore.subscribe(() => {\n  console.log('state updated');\n  console.log(store.getState());\n});\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: 'learn redux'\n});\nstore.dispatch({\n  type: 'ADD_POST',\n  todo: 'sending redux task'\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/maenggar/WebStorm Project/adroady/src/reducers/rootReducer.js"],"names":["createStore","initState","todo","post","rootReducer","state","action","type","store","subscribe","console","log","getState","dispatch"],"mappings":";AAAA,SAAQA,WAAR,QAA0B,OAA1B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAC,EADS;AAEdC,EAAAA,IAAI,EAAE;AAFQ,CAAlB;;AAKA,SAASC,WAAT,CAAqBC,KAAK,GAACJ,SAA3B,EAAqCK,MAArC,EAA6C;AACzC,MAAGA,MAAM,CAACC,IAAP,IAAc,UAAjB,EAA4B;AACxB,6BACOF,KADP;AAEIH,MAAAA,IAAI,EAAC,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAeI,MAAM,CAACJ,IAAtB;AAFT;AAIH;;AACD,MAAGI,MAAM,CAACC,IAAP,IAAc,UAAjB,EAA4B;AACxB,6BACOF,KADP;AAEIF,MAAAA,IAAI,EAAC,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAeG,MAAM,CAACH,IAAtB;AAFT;AAIH;AACJ;;AACD,MAAMK,KAAK,GAAER,WAAW,CAACI,WAAD,CAAxB;AAEAI,KAAK,CAACC,SAAN,CAAgB,MAAI;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AACH,CAHL;AAOAJ,KAAK,CAACK,QAAN,CAAe;AAACN,EAAAA,IAAI,EAAC,UAAN;AAAkBL,EAAAA,IAAI,EAAC;AAAvB,CAAf;AACAM,KAAK,CAACK,QAAN,CAAe;AAACN,EAAAA,IAAI,EAAC,UAAN;AAAkBL,EAAAA,IAAI,EAAC;AAAvB,CAAf;AAEA,eAAeE,WAAf","sourcesContent":["import {createStore} from 'redux';\n\nconst initState = {\n    todo:[],\n    post: []\n};\n\nfunction rootReducer(state=initState,action) {\n    if(action.type =='ADD_TODO'){\n        return{\n            ...state,\n            todo:[...state.todo,action.todo]\n        }\n    }\n    if(action.type =='ADD_POST'){\n        return{\n            ...state,\n            post:[...state.post,action.post]\n        }\n    }\n}\nconst store =createStore(rootReducer);\n\nstore.subscribe(()=>{\n        console.log('state updated');\n        console.log(store.getState() )\n    }\n\n);\n\nstore.dispatch({type:'ADD_TODO', todo:'learn redux'});\nstore.dispatch({type:'ADD_POST', todo:'sending redux task'});\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}