{"ast":null,"code":"import _objectSpread from \"/home/maenggar/WebStorm Project/adroady/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore } from 'redux';\nconst initState = {\n  todo: [],\n  post: []\n};\n\nfunction rootReducer(state = initState, action) {\n  if (action.type === 'ADD_TODO') {\n    return _objectSpread({}, state, {\n      todo: [...state.todo, action.todo]\n    });\n  }\n\n  if (action.type === 'ADD_POST') {\n    return _objectSpread({}, state, {\n      post: [...state.post, action.post]\n    });\n  }\n}\n\nconst store = createStore(rootReducer);\nstore.subscribe(() => {\n  console.log('state updated');\n  console.log(store.getState());\n});\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: 'learn redux'\n});\nstore.dispatch({\n  type: 'ADD_POST',\n  todo: 'sending redux task'\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/maenggar/WebStorm Project/adroady/src/reducers/rootReducer.js"],"names":["createStore","initState","todo","post","rootReducer","state","action","type","store","subscribe","console","log","getState","dispatch"],"mappings":";AAAA,SAAQA,WAAR,QAA0B,OAA1B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,EADQ;AAEdC,EAAAA,IAAI,EAAE;AAFQ,CAAlB;;AAKA,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,SAA7B,EAAwCK,MAAxC,EAAgD;AAC5C,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,6BACOF,KADP;AAEIH,MAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAgBI,MAAM,CAACJ,IAAvB;AAFV;AAIH;;AACD,MAAII,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,6BACOF,KADP;AAEIF,MAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACH,IAAvB;AAFV;AAIH;AACJ;;AACD,MAAMK,KAAK,GAAGR,WAAW,CAACI,WAAD,CAAzB;AAEAI,KAAK,CAACC,SAAN,CAAgB,MAAM;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AACH,CAHL;AAMAJ,KAAK,CAACK,QAAN,CAAe;AAACN,EAAAA,IAAI,EAAE,UAAP;AAAmBL,EAAAA,IAAI,EAAE;AAAzB,CAAf;AACAM,KAAK,CAACK,QAAN,CAAe;AAACN,EAAAA,IAAI,EAAE,UAAP;AAAmBL,EAAAA,IAAI,EAAE;AAAzB,CAAf;AAEA,eAAeE,WAAf","sourcesContent":["import {createStore} from 'redux';\n\nconst initState = {\n    todo: [],\n    post: []\n};\n\nfunction rootReducer(state = initState, action) {\n    if (action.type === 'ADD_TODO') {\n        return {\n            ...state,\n            todo: [...state.todo, action.todo]\n        }\n    }\n    if (action.type === 'ADD_POST') {\n        return {\n            ...state,\n            post: [...state.post, action.post]\n        }\n    }\n}\nconst store = createStore(rootReducer);\n\nstore.subscribe(() => {\n        console.log('state updated');\n        console.log(store.getState())\n    }\n);\n\nstore.dispatch({type: 'ADD_TODO', todo: 'learn redux'});\nstore.dispatch({type: 'ADD_POST', todo: 'sending redux task'});\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}