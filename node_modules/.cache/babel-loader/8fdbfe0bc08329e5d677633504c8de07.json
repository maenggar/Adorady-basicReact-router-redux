{"ast":null,"code":"import _objectSpread from \"/home/maenggar/WebStorm Project/adroady/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initState = {\n  todo: [],\n  post: [{\n    id: '1',\n    title: 'task redux',\n    data: 'ini data redux1'\n  }, {\n    id: '1',\n    title: 'task redux',\n    data: 'ini data redux1'\n  }, {\n    id: '1',\n    title: 'task redux',\n    data: 'ini data redux1'\n  }]\n};\n\nconst myReducer = (state = initState, action) => {\n  if (action.type === 'ADD_TODO') {\n    return _objectSpread({}, state, {\n      todo: [...state.todo, action.todo]\n    });\n  }\n\n  if (action.type === 'ADD_POST') {\n    return _objectSpread({}, state, {\n      post: [...state.post, action.post]\n    });\n  }\n};\n\nstore.subscribe(() => {\n  console.log('state updated');\n  console.log(store.getState());\n});\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: 'learn redux'\n});\nstore.dispatch({\n  type: 'ADD_POST',\n  todo: 'sending redux task'\n});\nexport default myReducer;","map":{"version":3,"sources":["/home/maenggar/WebStorm Project/adroady/src/reducers/MyReducer.js"],"names":["initState","todo","post","id","title","data","myReducer","state","action","type","store","subscribe","console","log","getState","dispatch"],"mappings":";AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,EADQ;AAEdC,EAAAA,IAAI,EAAE,CACF;AAACC,IAAAA,EAAE,EAAC,GAAJ;AAAQC,IAAAA,KAAK,EAAC,YAAd;AAA2BC,IAAAA,IAAI,EAAC;AAAhC,GADE,EAEF;AAACF,IAAAA,EAAE,EAAC,GAAJ;AAAQC,IAAAA,KAAK,EAAC,YAAd;AAA2BC,IAAAA,IAAI,EAAC;AAAhC,GAFE,EAGF;AAACF,IAAAA,EAAE,EAAC,GAAJ;AAAQC,IAAAA,KAAK,EAAC,YAAd;AAA2BC,IAAAA,IAAI,EAAC;AAAhC,GAHE;AAFQ,CAAlB;;AASA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGP,SAAT,EAAoBQ,MAApB,KAA+B;AAC7C,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,6BACOF,KADP;AAEIN,MAAAA,IAAI,EAAE,CAAC,GAAGM,KAAK,CAACN,IAAV,EAAgBO,MAAM,CAACP,IAAvB;AAFV;AAIH;;AACD,MAAIO,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,6BACOF,KADP;AAEIL,MAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBM,MAAM,CAACN,IAAvB;AAFV;AAIH;AACJ,CAbD;;AAeAQ,KAAK,CAACC,SAAN,CAAgB,MAAM;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AACH,CAHL;AAMAJ,KAAK,CAACK,QAAN,CAAe;AAACN,EAAAA,IAAI,EAAE,UAAP;AAAmBR,EAAAA,IAAI,EAAE;AAAzB,CAAf;AACAS,KAAK,CAACK,QAAN,CAAe;AAACN,EAAAA,IAAI,EAAE,UAAP;AAAmBR,EAAAA,IAAI,EAAE;AAAzB,CAAf;AAEA,eAAeK,SAAf","sourcesContent":["const initState = {\n    todo: [],\n    post: [\n        {id:'1',title:'task redux',data:'ini data redux1'},\n        {id:'1',title:'task redux',data:'ini data redux1'},\n        {id:'1',title:'task redux',data:'ini data redux1'}\n    ]\n};\n\nconst myReducer = (state = initState, action) => {\n    if (action.type === 'ADD_TODO') {\n        return {\n            ...state,\n            todo: [...state.todo, action.todo]\n        }\n    }\n    if (action.type === 'ADD_POST') {\n        return {\n            ...state,\n            post: [...state.post, action.post]\n        }\n    }\n}\n\nstore.subscribe(() => {\n        console.log('state updated');\n        console.log(store.getState())\n    }\n);\n\nstore.dispatch({type: 'ADD_TODO', todo: 'learn redux'});\nstore.dispatch({type: 'ADD_POST', todo: 'sending redux task'});\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}